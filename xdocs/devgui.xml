<?xml version="1.0"?>
<document>

  <properties>
    <author email="fossato@pow2.com">Luca Fossato</author>
    <title>DbForms Devgui</title>
  </properties>

<body>

<section name="Devgui">
<p>Devgui is a convenient SWING based application interface that can:
<ul>
    <li>Automatically create a first dbforms-config.xml for your database by reading the meta data about tables and columns inside your database</li>
    <li>Create JSPs that use the dbforms taglib by applying XSL transformations to the config file, so you have a running web application for your database without having written a single line of code.</li>
</ul>
</p>
  <subsection name="documents">
    <p>Please see the DevGui chapter in the installation section of the UsersGuide for more complete information on installation and use.
    </p>
  </subsection>

  <subsection name="Web application tab">
    <p>
	  <a href="images/devgui1.png">
	    <img src="images/devgui1-small.png" width="369" height="232" border="0"/></a>
	</p>
	<p>
	  <table width="600" border="1" cellspacing="0" cellpadding="2">
	  <tr> 
	    <th>item</th>
		<th>description</th>
      </tr>
      <tr> 
        <td>location of webapp</td>
		<td>
		  the JSP files generated by DevGui's XSL transformations will be written into this directory.
		</td>
	  </tr>
      <tr> 
        <td>web-URL of webapp</td>
		<td>
		  URL which can be used to access the application.
		</td>
	  </tr>
	  </table>
	</p>
  </subsection>

  <subsection name="Database tab">
    <p>
	  <a href="images/devgui2.png"><img src="images/devgui2-small.png" width="369" height="232" border="0"/></a>
	</p>
	<p>
	  <table width="600" border="1" cellspacing="0" cellpadding="2">
	  <tr> 
	    <th>item</th>
		<th>description</th>
      </tr>
      <tr> 
        <td>JDBC Driver Class</td>
		<td>
		  name of java class which implements java.sql.Driver and which will be used to connect to the database.<br/>
		  Examples:
		  <ul>
            <li>com.databasename.jdbc.Driver</li>
            <li>org.freedb.jdbc.type4driver.MainDriver</li>
          </ul>
		  See your driver's documentation.
		</td>
	  </tr>
      <tr> 
        <td>JDBC URL</td>
		<td>
		  URL to connect to database. Refer to driver documentation.<br/>
		  Examples:
		  <ul>
            <li>jdbc:foo:bar://host123:876/myveryimportantdb</li>
            <li>jdbc:abcd://host2.dom1.dom2.dom3/database=db3;option1=yes</li>
          </ul>
		</td>
	  </tr>
	  </table>
	</p>
  </subsection>

  <subsection name="XML Config Tab">
    <p>
	  <a href="images/devgui3.png"><img src="images/devgui3-small.png" width="369" height="232" border="0"/></a>
	</p>
	<p>
	  <table width="600" border="1" cellspacing="0" cellpadding="2">
	  <tr> 
	    <th>item</th>
		<th>description</th>
      </tr>
      <tr> 
        <td>DbForms-Config File</td>
		<td valign="top">
		  name of XML file which contains config for dbforms. An initial version of this file can be automatically generated by DevGui by reading meta data from the database. This file is also used as input for 
		  XSL transfortations in tab 'XSL Transformation'.<br/>
		  Filename should be something like:<br/>
		  <code>&lt;location-of-webapp&gt;/WEB-INF/dbforms-config.xml</code>
		</td>
	  </tr>
      <tr> 
        <td>Examine tables, views, system tables checkboxes</td>
		<td valign="top">
		  Allows to select for which table types, table descriptions should be 
		  generated into config file. 
		</td>
	  </tr>
      <tr> 
        <td>Catalog name filter</td>
		<td valign="top">
		  It depends on the database system, whether it supports catalogs and how it maps this general 
		  term to a database specific term. Often a catalog is mapped to a 'database'.
		  <br/>
		  The easiest thing is always to select 'all catalogs', but if needed, you may try to restrict 
		  the set of examined tables by entering a catalog name and selecting the corresponding radio button.
		  <br/>
		  Be aware that several database systems that map 'catalog' to 'database' do not allow to 
		  read information about tables in another database than that one you are currently connected to. 
		</td>
	  </tr>

      <tr> 
        <td>Schema filter</td>
		<td valign="top">
		  It depends on the database system, whether it supports schemas and how it maps this general 
		  terms to a specific term. Often a schema is mapped to 'table owner'. 
		  <br/>
		  The easiest thing is always to select radio button 'all schemas', but if needed, you may try to 
		  restrict the set of examined tables by entering a schema name pattern and selectiong the 
		  corresponding radio button.
		  <br/>
		  While you always have to enter a complete catalog name into combo box for catalog name, 
		  field for schema name may contain a schema pattern with '%' as pattern for an arbitrary 
		  (maybe empty) string. Examples:
		  <p>
		    <ul>
              <li>'foo%' would select all tables in a schema with a name that begins with substring 'foo'</li>
              <li>'%nix%' would select all tables in a schema with a name that contains a substring 'nix'</li>
            </ul>
		  </p>
		</td>
	  </tr>

      <tr> 
        <td>'Load' button</td>
		<td valign="top">
		  You can try to load the set of available catalog and schema names into the corresponding combo boxes by 
		  clicking the 'Load' button. You must have the database tab completed before. 
		</td>
	  </tr>

      <tr> 
        <td>Table name filter</td>
		<td valign="top">
		  Via radio buttons and textfield you can select tables with arbitrary names or with 
		  a name that matches a certain name pattern. See comments about patterns above. 
		</td>
	  </tr>

      <tr> 
        <td>Use autocommit mode</td>
		<td valign="top">
		  Should normally be checked, was inserted as a workaround for a bug of a special driver. 
		</td>
	  </tr>

      <tr> 
        <td>Write standard type names for unknown field types</td>
		<td valign="top">
		   If not checked, DevGui will write the names for column types exactly as it gets them 
		   from the database. Sometimes this may lead to problems, if the DBMS uses a type 
		   that could be handled by dbforms but is has an unknown specific name. 
		   <br/>
		   E.g. there are a lot of different names for various 'integer' types. 
		   If this option is checked, DevGui will try to write standard name for all unknown types 
		   into the generated dbforms config file. 
		</td>
	  </tr>
      <tr> 
        <td>Foreign key detection</td>
		<td valign="top">
		  Devgui can use meta data methods to determine foreign key relationships between tables 
		  and write corresponding tags into the generated config file. 
		  This can surely only work if the used database system as well as the JDBC driver supports this feature. 
		  You have two alternative method available: 
		  <p>
		    <ul>
              <li>
			    using method getImportedKeys() within a loop; this should always work and is default
			  </li>
              <li>
			    using method getCrossReferences() once; this might not work with all databases, 
				but if it does, it will probably be much faster than the first method above. 
				Simply try it out! 
			  </li>
            </ul>
		  </p>
		  You can also deactivate foreign key detection. 
		</td>
	  </tr>
      <tr> 
        <td>Include catalog or table name</td>
		<td valign="top">
		  If checked, DevGui tries to include catalog and/or schema name in generated xml file like 
		  'admin.table1' instead of just 'table1'. 
		</td>
	  </tr>
      <tr> 
        <td>Set date format to</td>
		<td valign="top">
		  Here you may select or enter a date pattern that then will be set as default date format within dbforms config file using tag date-format. 
		</td>
	  </tr>
      <tr> 
        <td>Generate XML button</td>
		<td valign="top">
		  DevGui tries to read database meta data and generated a dbforms config in XML format. Result is shown in editor pane.
		</td>
	  </tr>
      <tr> 
        <td>Save File</td>
		<td valign="top">
		  Save config in editor pane to dbforms config file. 
		</td>
	  </tr>
	  </table>
    </p>
  </subsection>

  <subsection name="XML Config Tab">
    <p>
	  <a href="images/devgui4.png"><img src="images/devgui4-small.png" width="369" height="232" border="0"/></a>
	</p>
	<p>
	  This tab can be used to automatically generate Java Server Pages that use DbForms 
	  taglib by applying XSL stylesheets to dbforms config file. 
	  To do that, you must have generated (or loaded) a dbforms config file, then you mark the name 
	  of a style sheet and select button 'start transformation'. 
	</p>
	<p>
	  <table width="600" border="1" cellspacing="0" cellpadding="2">
	  <tr> 
	    <th>item</th>
		<th>description</th>
      </tr>
      <tr> 
        <td>Stylesheet Directory</td>
		<td valign="top">
		  Location of the directory that contains your stylesheets that you wish to use.
		  <br/>
		  Defaults to:
		  <code>&lt;DBFORMS_HOME&gt;/xsl-stylesheets/</code>
		</td>
	  </tr>
      <tr> 
        <td>Use JavaScript Calendar</td>
		<td valign="top">
		  If checked, the generated pages will include a JavaScript calendar written 
		  by Robert W. Husted for editing of date fields. Calendar is included in 
		  dbforms with friendly permission of author.
		  See <a href="http://developer.iplanet.com/viewsource/husted_calendar/husted_calendar.html">http://developer.iplanet.com/viewsource/husted_calendar/husted_calendar.html</a>
		  for more information about this tool. The calendar is now developed as open source project 'jscal' with
		  homepage at <a href="http://jscal.sourceforge.net/">http://jscal.sourceforge.net/</a>.
		  <p>
		    Unfortunately this calendar only seems to work with Internet Explorer, so by default this option
		    is not checked.
		  </p> 
		  Generated pages are written to the web application directory. 
		</td>
	  </tr>
      </table>
    </p>
  </subsection>
</section>

</body>
</document>
