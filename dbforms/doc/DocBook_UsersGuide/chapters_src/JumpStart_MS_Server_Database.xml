<?xml version="1.0" encoding="UTF-8" ?>
<chapter lang="en-US">
    <title>
   Jump-start a MS SQL Server 
    </title>
    <sect1>
      <title>Introduction</title>
      
     <para>
     
     <screen>

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Jump-start Instructions for installing dbforms on Windows 2000 with a MS
SQL Server Database

Authors:	Richard Bondi (rbondi@ergito.com)
                Matthew Stein (mstein@ergito.com)
Created:	27 JAN 2003
Version:	beta 1
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
</screen>

</para>
<para> 
This document was written to help you get dbforms up and running, no
more; hence the &quot;jump-start&quot; in the title.</para>

<para>Dbforms can be thought of *essentially* as an open source add-on for
the Tomcat servlet server that allows you to update, delete, insert,
search, and browse database tables via jsp pages, without having to
write these jsp pages. It is available at
http://jdbforms.sourceforge.net.</para>

<para>This file contains instructions for creating a dbforms installation for
MS SQL Server, for a single table that has no foreign keys, and an
identity column. We wrote it because the existing instructions are
spread out among different files, are missing for at least one important
step, and do not cover problems specific to Microsoft SQL Server.</para>

<para>We use a pre-release version of dbforms because in separate document, we
will describe how to use tables with foreign keys, and our solution only
works with the pre-release version.</para>

<para>In a number of places in this document, we confess our ignorance with
the disclaimer &quot;but it works for us.&quot; We would be glad to be enlightened
by future readers, and to improve this document accordingly.</para>

<para>Please email any comments or enhancements to Richard Bondi
(rbondi@ergito.com).</para>

 
<para>
Richard Bondi
Matthew Stein
</para>
</sect1>

<sect1>
<title>Requirements</title>
<para>

<screen>
=============
Download all of these files (many of them in zips) to a temporary
location; you will be moving them to permanent locations as part of the
dbforms installation.

- Tomcat 4.0.6
	- downloadable from http://jakarta.apache.org, Tomcat project
	-	use LE version, because you will already have j2sdk 2.0 v.1.4
		installed.

- j2sdk 2.0 v.1.4
	- http://java.sun.com
        
- dbforms 1.1.3pr1
	- downloadable from http://jdbforms.sourceforge.net

- Microsoft JDBC driver for Microsoft SQL Server.
	- downloadable from http://www.microsoft.com/sql/downloads

- Struts v. 1.0.2
	- downloadable from http://jakarta.apache.org, Struts project
            Currently, click the &quot;Resources&quot; link under &quot;Download&quot; part of the
            Commons project at jakarta.apache.org.)<footnote><para>I don't know the difference between a &quot;version&quot; and an
            &quot;implementation version&quot;, as in the case of log4j.jar. Anyone who knows,
            please let me know.</para> </footnote>
             
- commons-beanutils.jar
	- ver. 1.0
	- downloadable from <ulink url="http://jdbforms.sourceforge.net"><citetitle>http://jdbforms.sourceforge.net</citetitle></ulink>, click &quot;Resources&quot;
		under &quot;Download&quot;
	- downloadable from <ulink url="http://jakarta.apache.org"><citetitle>http://jakarta.apache.org</citetitle></ulink>, Commons project

        -commons-collections.jar
	- ver. 1.0
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
                under &quot;Download&quot;
	- downloadable from http://jakarta.apache.org, Commons project
        
- commons-digester.jar
	- ver. 1.0
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
		under &quot;Download&quot;
	- downloadable from http://jakarta.apache.org, Commons project

- commons-logging.jar
	-	ver. 1.0
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
		under &quot;Download&quot;
	-	downloadable from http://jakarta.apache.org, Commons project

- commons-validator.jar
	- ver. ? (manifest file doesn't list version.)
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
		under &quot;Download&quot;
	- downloadable from http://jakarta.apache.org, Commons project

- jakarta-oro-2.0.6.jar
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
		under &quot;Download&quot;
	- downloadable from http://jakarta.apache.org, ORO project

- log4j.jar
	- Implementation-Version: 1.1b2
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
		under &quot;Download&quot;
	-downloadable from http://jakarta.apache.org, Log4j project

- cos.jar
	- ver. ? (manifest file doesn't list version.)
	- downloadable from http://jdbforms.sourceforge.net, click &quot;Resources&quot;
		under &quot;Download&quot;
	- downloadable from http://www.oreilly.com
</screen>

</para>
<para>
Finally, you should also have enough knowledge of XML not to go &quot;huh?&quot;
when we write about &quot;attributes&quot;, &quot;elements&quot; or &quot;tags&quot;.
</para>
</sect1>
<sect1>
<title>Installation</title>
<para>Installation steps are specified in the following subsections. </para>
 <sect2><title>j2sdk 2.0 v1.4</title> 
<para>

<screen>
======================
You must use this version for these dbforms instructions, because of its
xml/xsl classes.
</screen>

</para>
</sect2>
<sect2>
<title>Install MS JDBC Driver</title>
<para>

<screen>
======================
Install the Microsoft JDBC driver for Microsoft SQL Server:

- run the setup.exe.

	- Currently, when you run the install, it identifies itself as a
        Service Pack 1. That's ok, it includes the original JDBC driver
        too.
</screen>

</para>
</sect2>
<sect2>
<title>Install Tomcat and create &quot;dbf&quot; webapp</title>
<para>

<screen>
======================================
-	Just run the friendly install program.

	-	Note: we couldn't get the NT service option to work: we could never
		start the service, so we suggest you skip it.

-	Read and follow the RUNNING.txt file, included with the download,
	but also availabe at http://jakarta.apache.org under the Tomcat
	project (make sure you read the one for version 4.0.6).

-	Edit the %CATALINA_HOME%\conf\server.xml file:
	-	Find the first Context element
	-       Add the following element:

			&gt;Context path=&quot;/dbf&quot; docBase=&quot;dbf&quot; debug=&quot;0&quot; reloadable=&quot;true&quot;/&lt;

		-	&quot;path&quot; is a relative virtual path on the server (e.g. localhost/dbf)
		-	&quot;docBase&quot; is the directory where the files are located; this is relative
			off of %CATALINA_HOME%\webapps, but you can specify full paths such
			as c:\mydir\here.
		-	For more information, read the Tomcat docs.

-       Create the directory specified in the &quot;docBase&quot; above.
-       Create a sub-directory, WEB-INF
-       Create a sub-directory, WEB-INF\lib
</screen>

</para>
</sect2>
<sect2>
<title>Create dbforms web.xml file</title>
<para>

<screen>
 
===========================
- Create a file called web.xml with the contents shown below, and put it
	in the WEB-INF directory you just created. <footnote><para>Please note that you will not find this file's full contents in
the documentation. Different parts of the dbforms documentation contain
parts of, but not all of it;	an essential part is missing
altogether and only in the mailing list archive.</para> </footnote> 

!! WARNING !!
(You must manually remove any line breaks that occur in any
of the elements below. Formatting this file made them inevitable.)

:::::::::::::::::::::::::::: snip :::::::::::::::::::::::::::::::::

&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE web-app PUBLIC &quot;-//Sun Microsystems, Inc.//DTD Web Application
2.3//EN&quot; &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;&gt;
&lt;web-app&gt;
	&lt;!--=========== DbForms Configuration Servlet ===========--&gt;
	&lt;servlet&gt;
		&lt;servlet-name&gt;org.dbforms.ConfigServlet&lt;/servlet-name&gt;
		&lt;servlet-class&gt;org.dbforms.ConfigServlet&lt;/servlet-class&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;dbformsConfig&lt;/param-name&gt;
			&lt;param-value&gt;/WEB-INF/dbforms-config.xml&lt;/param-value&gt;
		&lt;/init-param&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;log4j.configuration&lt;/param-name&gt;
			&lt;param-value&gt;/WEB-INF/log4j.properties&lt;/param-value&gt;
		&lt;/init-param&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;resourceBundle&lt;/param-name&gt;
			&lt;param-value&gt;ApplicationResources&lt;/param-value&gt;
		&lt;/init-param&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;validation&lt;/param-name&gt;
			&lt;param-value&gt;/WEB-INF/validation.xml&lt;/param-value&gt;
		&lt;/init-param&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;validator-rules&lt;/param-name&gt;
			&lt;param-value&gt;/WEB-INF/validator-rules.xml&lt;/param-value&gt;
		&lt;/init-param&gt;
		&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
	&lt;/servlet&gt;
	&lt;servlet&gt;
		&lt;servlet-name&gt;control&lt;/servlet-name&gt;
		&lt;servlet-class&gt;org.dbforms.Controller&lt;/servlet-class&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;maxUploadSize&lt;/param-name&gt;
			&lt;param-value&gt;80000&lt;/param-value&gt;
		&lt;/init-param&gt;
	&lt;/servlet&gt;
	&lt;!-- optional? Seems to work without this. rb, 1/23/2003.--&gt;
	&lt;taglib&gt;
		&lt;taglib-uri&gt;/WEB-INF/dbforms.tld&lt;/taglib-uri&gt;
		&lt;taglib-location&gt;/WEB-INF/dbforms.tld&lt;/taglib-location&gt;
	&lt;/taglib&gt;
&lt;/web-app&gt;
:::::::::::::::::::::::::::: snip :::::::::::::::::::::::::::::::::

- Create a file index.html that contains simply &quot;hello world&quot; and put
	it in %CATALINA_HOME%\webapps\dbf.

- Start Tomcat (run %CATALINA_HOME%\bin\startup.bat), and attempt to
	load this file by going to

		http://localhost:8080/dbf/index.html

- If there is a problem, it is a Tomcat problem. You'll have to solve
        that on your own using all available Tomcat support resources. (Start
        with the file RUNNING.txt.)
</screen>

</para>
</sect2>
<sect2>
<title>
Get what web.xml needs</title>
<para>

<screen>
 
======================

A number of files are referred to in web.xml. We list them here by their
&lt;param-name&gt; names, and explain what to do about them.

* &lt;param-name&gt;dbformsConfig&lt;/param-name&gt;
We create this file below, with devgui.

* &lt;param-name&gt;log4j.configuration&lt;/param-name&gt;
Create a file called log4j.properties and put it into WEB-INF. It should
have the following contents:

!! WARNING !!
(You must manually remove any line breaks that occur in any
of the # comments below. Formatting this file made them inevitable.)
:::::::::::::::::::::::::::: snip :::::::::::::::::::::::::::::::::

#Log4j Configuation file
# Created by Matthew Stein, 1/14/2003
# Based out of text in
# http://www.javaworld.com/jw-11-2000/jw-1122-log4j-p2.html


# First, set the &quot;rootCategory&quot; so everything gets logged if necessary.

# (For multiple logs beyond those specified here, use , name format.
log4j.rootCategory=ALL, A2, A3



# Define A2
#   Define writer
#   Define layout
log4j.appender.A2=org.apache.log4j.ConsoleAppender
log4j.appender.A2.Target=System.out
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n


#Define A3 [a/k/a A2 written to a file ]
#   Define writer
#   Define layout
log4j.appender.A3=org.apache.log4j.RollingFileAppender
log4j.appender.A3.File=/RFA.log log4j.appender.A3.MaxBackupIndex=10
log4j.appender.A3.MaxFileSize=1MB log4j.appender.A3.Append=True
log4j.appender.A3.layout=org.apache.log4j.PatternLayout
log4j.appender.A3.layout.ConversionPattern=%d{DATE} %F %p: %C(%x) - %m%n

:::::::::::::::::::::::::::: snip :::::::::::::::::::::::::::::::::

* &lt;param-name&gt;validation&lt;/param-name&gt;,
	&lt;param-name&gt;validator-rules&lt;/param-name&gt;
We don't know what these are or where to get them,
but our Tomcat installation worked without them. We suspect they are
used for form validation, but we really have no clue.

* &lt;taglib-uri&gt;/WEB-INF/dbforms.tld&lt;/taglib-uri&gt;
Put %DBFORMS_HOME%\dist\*.tld into WEB-INF

Copy required jars
===================
-	Copy these jars, downloaded previously, into WEB-INF\lib:
	-	commons-beanutils.jar
	-	commons-collections.jar
	-	commons-digester.jar
	-	commons-logging.jar
	-	commons-validator.jar
	-	cos.jar
	-	jakarta-oro-2.0.6.jar
	-	log4j.jar

-	Find the three jars that come with the MS SQL Server JDBC driver,and
	copy them into WEB-INF\lib. Their names are:
	-	mssqlserver.jar
	-	msbase.jar
	-	msutil.jar

- Copy %DBFORMS_HOME%\dist\dbforms_v1_1_3pr1.jar into WEB-INF\lib

-	From the struts zip file that you downloaded, extract only the
	struts.jar file, and put it into WEB-INF\lib.
</screen>

</para>
</sect2>
<sect2>
<title>Prepare MS SQL Server</title>
<para>

<screen>
=====================
In this document, we will assume the following names for MS SQL Server;
just substitute those of your actual MS SQL Server installation:

server name: 	birdserver
database name: 	parrotDb
table name: 	PLUMAGE_TABLE

The table PLUMAGE_TABLE has the following properties:
-	you are willing to modify its rows
-	it has an identity column
-	it has no foreign keys.

(In a different document, we describe how to use dbforms with tables
that have foreign keys.)
</screen>

</para>
</sect2>
<sect2>
<title>Create MS SQL Server user</title>
<para>

<screen>
=========================
In order for dbforms to point to parrotDb, and not some other default db
like &quot;master&quot;, we create a user to whom we assign parrotDb as the
default. (This isn't strictly necessary, see footnote <footnote><para>There are two reasons why you might check this. -First, it is
a way to ensure that you are referring to the db you want, in this case
&quot;parrotDb&quot;. In this example, we chose to do this by creating a Sql
Server user whose default database we can specify; that way, when Java
connects to the db via JDBC, we guarantee that &quot;parrotDb&quot; will be used.
Instead, you could choose any user (with appropriate permissions), not
specify its default db, and instead explicitly state the database and
user by checking &quot;Include Schema name in table name.&quot; Unfortunately, we
are baffled by what a Schema name is -- the list of them in devgui
doesn't make sense to us. But that's our problem, not devgui's or Sql
Server's. Second, if you generate dbforms pages for more than one
&quot;catalog&quot; (a MS SQL Server database), then of course you have to specify
the catalog of each table. Otherwise neither JDBC nor SQL Server will
know which db to look for the table in. We haven't tried this, and we
hope never to have to!</para> </footnote> ; but we
chose to do it that way.)

We will create:

user on parrotDb:               dbfuser
password:			dbfpwd
user's default database:	parrotDb

- Open Sql Enterprise Manager (*ii*)

- Click on the database parrotDb
-	Double-click the Users icon on the right

- Right-click on the right pane and select New database user...
-	Name: dbfuser
-	SQL Server authentication password: dbfpwd

- Database: parrotDb 	-	database
-	Roles:
	-	public (assigned automatically)
	-	db_datareader
	-	db_datawrite
</screen>

</para>
</sect2>
<sect2>
<title>
Generate dbforms-config.xml</title>
<para>

<screen>
 
===========================
-	(optional) When you installed the Microsoft JDBC driver above, 	it
	installed 3 jars (in the \lib directory underneath the 	installation
	directory). Copy the three Microsoft JDBC jars to a simple, top level
	directory (like c:\java\jars or something) 	now to avoid a horribly
	illegible classpath.
        
-	Put the three MS JDBC jars into your classpath

-	Set DBFORMS_HOME to the directory you installed dbforms to, e.g.
	c:\java\dbforms or whatever. <footnote><para>Shortcut: Instead of right-clicking on My Computer and selecting
Properties, hold down the Windows key and press the Break key. Don't
forget that after making changes to environment variables only affect
new &quot;cmd&quot; dos windows, not any that are already open.</para> </footnote> 

(These steps are described more generally in the Readme_DevGui (no
extension) in the %DBFORMS_HOME% directory. I have left out the xml/xsl
jars because j2sdk 2.0 1.4 already has stuff like that.)

- Run %DBFORMS_HOME%\bin\devgui.bat

You will see four tabs. Fill them out as follows: (Note that you can
save all the info we are about to type in into a reloadable file, via
the Project menu.)

- WebApps tab:
	- Location of Webapp: If for example %CATALINA_HOME% is
		c:\tc401, then this would be c:\tc401\webapps\dbf
	- Web-URL of Webapp: for the installation described in this document,
		this would be http://127.0.0.1:8080/dbf.

-	Database tab:
		- JDBC driver class: this what is inside the Java call
                    class.forName. You can find it inside the MS JDBC documentation. Itis: 
                 
                        com.microsoft.jdbc.sqlserver.SQLServerDriver
                    
		- JDBC URL: Again, this is in the help file. It is a parameter of
                    the Java JDBC DriverManager.getConnection call. It is:
                    
                        jdbc:microsoft:sqlserver://yourServerName:1433
                    
                    or in the example we are using:
                    
			jdbc:microsoft:sqlserver://birdserver:1433

(If your server is on another machine, you might want to use the full
DNS name, e.g. birdserver.internal.pets4all.com, not just birdserver.)

	- Username and password:
		In our example, these are &quot;dbfuser&quot; and &quot;dbfpwd&quot;.
	
        - Click Test connection.
		- If unsuccessful, double-check the above values, and that the
			MS JDBC jars are really in your classpath.

-	XML Config tab
	This tab is for creating the dbforms-config.xml. <footnote><para>You can actually call it whatever you want, since you specify the
file's name in your web.xml file, in the &lt;param-name&gt;
dbformsConfig&lt;/param-name&gt;.
</para> </footnote> 
	-	DbForms config file:
		Specify the path and file name for the docBase you specified \WEB-
		INF\dbforms-config.xml If you don't have one yet (and you shouldn't,
		if your following these instructions for the first time)
			- click Browse
			-	drill down to the directory specified in docBase\WEB-INF
			-	type in &quot;dbforms-config.xml&quot; in the File Name box
			-	click Open
			-	ignore the error message.
		Alternatively, you can just type in the exact path and file name
		manually.

	-	Examine:
		This is self-explanatory. Here you say whether you want to use
		dbforms web pages to update/insert/delete tables, and/or views,
		and/or system tables.
		- choose Tables.
		-	Click the LOAD button.
	-	Catalogs:
		In MS SQL Server, these are databases.
		-	Click &quot;in catalog with name&quot;
		-	select e.g. PLUMAGE_TABLE
	-	Schemas:
		(Honestly, we don't know what these correspond to in MS SQL Server.
		Just do what we did:)
		-	Choose dbo.
		-	Check &quot;in schema with name pattern.&quot;
	-	Table names:
		(You can use the LIKE wild cards % and _. For this example:)
		-	type PLUMAGE_TABLE for the table name
		-	Check &quot;with table name pattern.&quot;
	- Autocommit
		-	Check &quot;use autocommit&quot;. (We don't know why, but it works.)
	-	Try to write standard types...
		-	Leave this unchecked. (We don't know why, but it works.)

	-	Foreign key detection
		-	For this example, check &quot;deactivated&quot;.

	- Include catalog/schema name in table name
		- Leave unchecked. (*v*)
	- Set Date Format to:
		-	Umm... We don't know whether this is just for how dates are
			displayed, or for something else. We've treated it as a display-
			only choice; so choose your favorite.

	-	Click Generate Xml.
	- Expand the window to see the generated xml.
	- Edit the generated xml as follows:
		- Find the
				fieldType=&quot;int identity&quot;
			attribute. Change this to:
				fieldType=&quot;int&quot;
		-	If the same tag doesn't have an autoInc attribute, add:
				autoInc=&quot;true&quot;
	- Delete any columns you don't want to display/edit via dbforms.
	-	Click Save.
		This saves the xml to the xml into the file you specified
		at the top of the dialog, as
			the specified docBase\WEB-INF\dbforms-config.xml

-	XSL Transformation tab
	In devgui, click the fourth tab, XSL Transformation. From this dialog,
	DevGui simply transforms the dbforms-config.xml file with each of the
	xsl style sheets listed. Each style sheet produces a different jsp or
	set of jsps. <footnote><para>If you know xsl, feel free to edit them to your heart's delight,
and store your edited ones in a different directory: just select that
directory here before you start transforming.</para> </footnote> 
	That's the beauty of dbforms: if you have 20 tables, you don't have to
	lose your mind generating custom jsps for each one; instead, you come
	to this dialog and generate them all.

	- Stylesheet directory:
		This will already be set to where the xsls are in the dbforms
		directory.
	-	Use JavaScript Calendar
		May or may not work on your browser. Allows you to select a date
		from a pop-up calendar instead of typing in the date. Check if
		you're feeling moderately adventurous.
	-	For each xsl stylesheet listed:
		- click on it to highlight it
		- click &quot;start transformation!&quot;

	- Do *not* edit and/or save the xsl stylesheets displayed at the
		bottom of the dialog.
</screen>

</para>
</sect2>
</sect1>
<sect1>
<title>Use it</title>
<para>

<screen>
======
-	Stop and start tomcat
-	Point your browser to:

	http://localhost:8080/dbf/menu.jsp

-	If you get a crash, go to the DOS window that opens whenever you
	launch 	Tomcat. Scrutinize all the errors and other logging in it.
	Your log4j.properties file is maximizing the logging information.

	This is always the place to start when trying to debug dbforms.

-	Click View Normal button

	Note that the next page will take a long time to load. This will be
	true 	of all first pages while Tomcat compiles them for the first
	time.

	You should see all rows of the table PLUMAGE_TABLE.

-	Click all the buttons on menu.jsp; you should be able to figure out
	what they do from there.
</screen>

</para>
</sect1>
<sect1>
<title>Conclusion</title>
<para>==========</para>
<para>
This document was written to help you get dbforms up and running, no
more; hence the &quot;jump-start&quot; in the title. For example,if you want to
know how to display more rows at a time in Edit Range, we refer you to
the dbforms documentation. Or to configure log4j to customize logging,
see the log4j documentation.</para>

<para>Once again, please email all suggestions and improvements for this
document to rbondi@ergito.com.
</para>
</sect1>
</chapter>
 


 
