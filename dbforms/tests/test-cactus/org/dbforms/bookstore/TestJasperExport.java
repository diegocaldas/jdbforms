/*
 * $Header$
 * $Revision$
 * $Date$
 *
 * DbForms - a Rapid Application Development Framework
 * Copyright (C) 2001 Joachim Peer <joepeer@excite.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 */

package org.dbforms.bookstore;

// package
// This class was generated by MaxQ (maxq.tigris.org)
// imports
import java.util.List;
import java.util.ArrayList;
import org.dbforms.util.KeyValuePair;
import org.dbforms.util.HttpTestCase;

// definition of test class
public class TestJasperExport extends HttpTestCase {

	// Test method generated from the MaxQ Java generator
    public TestJasperExport(String name) {
        super(name);
    }

    public void testTestPDFExportAll() throws Exception {
        privTestFirst();

        List list;
        list = new ArrayList();
        list.add(new KeyValuePair("invtable", "1"));
        list.add(new KeyValuePair("invname_1", ""));
        list.add(new KeyValuePair("autoupdate_1", "false"));
        list.add(new KeyValuePair("fu_1", "/howto/howtoPrintaJasperReport.jsp"));
        list.add(new KeyValuePair("lang", "de"));
        list.add(new KeyValuePair("source", "/bookstore/howto/howtoPrintaJasperReport.jsp"));
        list.add(new KeyValuePair("customEvent", ""));
        list.add(new KeyValuePair("firstpos_1", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("lastpos_1", "0%3A1%3A9-2%3A1%3A2"));
        list.add(new KeyValuePair("currentRow", "1_0@root"));
        list.add(new KeyValuePair("dataac_goto_1_1_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_1_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_1_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_1_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_2_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_2_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_2_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_2_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_3_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_3_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_3_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_3_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_4_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_4_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_4_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_4_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_5_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_5_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_5_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_5_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_6_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_6_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_6_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_6_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_7_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_7_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_7_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_7_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_8_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_8_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_8_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_8_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_9_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_9_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_9_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_9_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_10_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_10_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_10_singleRow", "false"));
        list.add(new KeyValuePair("ac_goto_1_10", "print all"));
        list.add(new KeyValuePair("k_1_0@root", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_1@root", "0%3A1%3A2-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_2@root", "0%3A1%3A3-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_3@root", "0%3A1%3A4-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_4@root", "0%3A1%3A5-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_5@root", "0%3A1%3A6-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_6@root", "0%3A1%3A7-2%3A0%3A"));
        list.add(new KeyValuePair("k_1_7@root", "0%3A1%3A8-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_8@root", "0%3A1%3A9-2%3A1%3A2"));
        post("http://localhost/bookstore/servlet/control", list);
        printResponse();
        assertTrue(responseContains("%PDF-1.4"));
    }
    public void testTestPDFExportSingle() throws Exception {
        privTestFirst();

        List list;
        list = new ArrayList();
        list.add(new KeyValuePair("invtable", "1"));
        list.add(new KeyValuePair("invname_1", ""));
        list.add(new KeyValuePair("autoupdate_1", "false"));
        list.add(new KeyValuePair("fu_1", "/howto/howtoPrintaJasperReport.jsp"));
        list.add(new KeyValuePair("lang", "de"));
        list.add(new KeyValuePair("source", "/bookstore/howto/howtoPrintaJasperReport.jsp"));
        list.add(new KeyValuePair("customEvent", ""));
        list.add(new KeyValuePair("firstpos_1", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("lastpos_1", "0%3A1%3A9-2%3A1%3A2"));
        list.add(new KeyValuePair("currentRow", "1_0@root"));
        list.add(new KeyValuePair("dataac_goto_1_1_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_1_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_1_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_1_singleRow", "true"));
        list.add(new KeyValuePair("ac_goto_1_1", "print current"));
        list.add(new KeyValuePair("dataac_goto_1_2_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_2_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_2_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_2_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_3_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_3_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_3_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_3_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_4_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_4_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_4_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_4_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_5_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_5_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_5_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_5_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_6_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_6_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_6_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_6_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_7_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_7_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_7_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_7_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_8_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_8_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_8_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_8_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_9_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_9_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_9_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_9_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_10_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_10_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_10_singleRow", "false"));
        list.add(new KeyValuePair("k_1_0@root", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_1@root", "0%3A1%3A2-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_2@root", "0%3A1%3A3-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_3@root", "0%3A1%3A4-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_4@root", "0%3A1%3A5-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_5@root", "0%3A1%3A6-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_6@root", "0%3A1%3A7-2%3A0%3A"));
        list.add(new KeyValuePair("k_1_7@root", "0%3A1%3A8-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_8@root", "0%3A1%3A9-2%3A1%3A2"));
        post("http://localhost/bookstore/servlet/control", list);
        printResponse();
        assertTrue(responseContains("%PDF-1.4"));
    }

    public void testTestCSVExportAll() throws Exception {
        privTestFirst();
        List list;
        list = new ArrayList();
        list.add(new KeyValuePair("invtable", "1"));
        list.add(new KeyValuePair("invname_1", ""));
        list.add(new KeyValuePair("autoupdate_1", "false"));
        list.add(new KeyValuePair("fu_1", "/howto/howtoPrintaJasperReport.jsp"));
        list.add(new KeyValuePair("lang", "de"));
        list.add(new KeyValuePair("source", "/bookstore/tests/testJasperExport.jsp"));
        list.add(new KeyValuePair("customEvent", ""));
        list.add(new KeyValuePair("firstpos_1", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("lastpos_1", "0%3A1%3A9-2%3A1%3A2"));
        list.add(new KeyValuePair("currentRow", "1_0@root"));
        list.add(new KeyValuePair("dataac_goto_1_41_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_41_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_41_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_41_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_42_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_42_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_42_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_42_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_43_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_43_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_43_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_43_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_44_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_44_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_44_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_44_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_45_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_45_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_45_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_45_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_46_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_46_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_46_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_46_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_47_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_47_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_47_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_47_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_48_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_48_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_48_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_48_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_49_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_49_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_49_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_49_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_50_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_50_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_50_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_50_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_51_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_51_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_51_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_51_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_52_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_52_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_52_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_52_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_53_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_53_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_53_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_53_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_54_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_54_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_54_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_54_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_55_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_55_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_55_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_55_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_56_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_56_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_56_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_56_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_57_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_57_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_57_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_57_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_58_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_58_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_58_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_58_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_59_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_59_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_59_singleRow", "false"));
        list.add(new KeyValuePair("dataac_goto_1_60_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_60_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_60_singleRow", "false"));
        list.add(new KeyValuePair("ac_goto_1_60", "print all as CSV"));
        list.add(new KeyValuePair("k_1_0@root", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_1@root", "0%3A1%3A2-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_2@root", "0%3A1%3A3-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_3@root", "0%3A1%3A4-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_4@root", "0%3A1%3A5-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_5@root", "0%3A1%3A6-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_6@root", "0%3A1%3A7-2%3A0%3A"));
        list.add(new KeyValuePair("k_1_7@root", "0%3A1%3A8-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_8@root", "0%3A1%3A9-2%3A1%3A2"));
        post("http://localhost/bookstore/servlet/control", list);
        printResponse();
        assertTrue(responseContains("BOOKSTORE list of books,,,,"));
        assertTrue(responseContains(",ID,,ISBN,TITLE"));
        assertTrue(responseContains(",1,3-423-12445-4,,Die Insel des vorigen Tages"));
        assertTrue(responseContains(",2,3-423-12445-5,,Das Foucaltsche Pendel"));
        assertTrue(responseContains(",3,42-1,,Hijacking through the Galaxy 1"));
        assertTrue(responseContains(",4,42-2,,Hijacking through the Galaxy 2"));
        assertTrue(responseContains(",5,42-3,,Hijacking through the Galaxy 3"));
        assertTrue(responseContains(",6,42-4,,Hijacking through the Galaxy 4"));
        assertTrue(responseContains(",7,,,Test null value"));
        assertTrue(responseContains(",8,42-5,,\"Luca's favorite thing to eat is  \"\"delicious Italian \""));
        assertTrue(responseContains(",9,42-6,,Hijacking through the Galaxy 6"));
    }

    public void testTestCSVExportSingle() throws Exception {
        privTestFirst();

        List list;
        list = new ArrayList();
        list.add(new KeyValuePair("invtable", "1"));
        list.add(new KeyValuePair("invname_1", ""));
        list.add(new KeyValuePair("autoupdate_1", "false"));
        list.add(new KeyValuePair("fu_1", "/howto/howtoPrintaJasperReport.jsp"));
        list.add(new KeyValuePair("lang", "de"));
        list.add(new KeyValuePair("source", "/bookstore/tests/testJasperExport.jsp"));
        list.add(new KeyValuePair("customEvent", ""));
        list.add(new KeyValuePair("firstpos_1", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("lastpos_1", "0%3A1%3A9-2%3A1%3A2"));
        list.add(new KeyValuePair("currentRow", "1_0@root"));
        list.add(new KeyValuePair("dataac_goto_1_41_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_41_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_41_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_41_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_42_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_42_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_42_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_42_singleRow", "true"));
        list.add(new KeyValuePair("ac_goto_1_42", "print current as CSV"));
        list.add(new KeyValuePair("dataac_goto_1_43_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_43_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_43_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_43_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_44_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_44_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_44_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_44_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_45_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_45_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_45_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_45_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_46_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_46_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_46_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_46_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_47_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_47_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_47_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_47_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_48_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_48_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_48_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_48_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_49_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_49_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_49_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_49_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_50_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_50_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_50_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_50_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_51_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_51_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_51_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_51_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_52_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_52_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_52_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_52_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_53_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_53_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_53_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_53_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_54_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_54_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_54_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_54_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_55_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_55_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_55_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_55_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_56_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_56_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_56_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_56_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_57_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_57_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_57_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_57_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_58_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_58_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_58_keyToKeyToDestPos", "currentRow"));
        list.add(new KeyValuePair("dataac_goto_1_58_singleRow", "true"));
        list.add(new KeyValuePair("dataac_goto_1_59_fu", "/reports/books"));
        list.add(new KeyValuePair("dataac_goto_1_59_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_59_singleRow", "false"));
        list.add(new KeyValuePair("dataac_goto_1_60_fu", "/reports/books?reporttype=CSV"));
        list.add(new KeyValuePair("dataac_goto_1_60_destTable", "BOOK"));
        list.add(new KeyValuePair("dataac_goto_1_60_singleRow", "false"));
        list.add(new KeyValuePair("k_1_0@root", "0%3A1%3A1-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_1@root", "0%3A1%3A2-2%3A1%3A1"));
        list.add(new KeyValuePair("k_1_2@root", "0%3A1%3A3-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_3@root", "0%3A1%3A4-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_4@root", "0%3A1%3A5-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_5@root", "0%3A1%3A6-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_6@root", "0%3A1%3A7-2%3A0%3A"));
        list.add(new KeyValuePair("k_1_7@root", "0%3A1%3A8-2%3A1%3A2"));
        list.add(new KeyValuePair("k_1_8@root", "0%3A1%3A9-2%3A1%3A2"));

        post("http://localhost/bookstore/servlet/control", list);
        printResponse();
        assertTrue(responseContains("BOOKSTORE list of books,,,,"));
        assertTrue(responseContains(",ID,,ISBN,TITLE"));
        assertTrue(responseContains(",1,3-423-12445-4,,Die Insel des vorigen Tages"));
        assertFalse(responseContains(",2,3-423-12445-5,,Das Foucaltsche Pendel"));
        assertFalse(responseContains(",3,42-1,,Hijacking through the Galaxy 1"));
        assertFalse(responseContains(",4,42-2,,Hijacking through the Galaxy 2"));
        assertFalse(responseContains(",5,42-3,,Hijacking through the Galaxy 3"));
        assertFalse(responseContains(",6,42-4,,Hijacking through the Galaxy 4"));
        assertFalse(responseContains(",7,,,Test null value"));
        assertFalse(responseContains(",8,42-5,,\"Luca's favorite thing to eat is  \"\"delicious Italian \""));
        assertFalse(responseContains(",9,42-6,,Hijacking through the Galaxy 6"));
    }

    private void privTestFirst() throws Exception {
        get("http://localhost/bookstore/tests/testJasperExport.jsp");
        printResponse();
        assertTrue(responseContains("Die Insel des vorigen Tages"));
        assertTrue(responseContains("Das Foucaltsche Pendel"));
        assertTrue(responseContains("print all as CSV"));
        assertTrue(responseContains("print all as PDF"));
        assertTrue(responseContains("print current as CSV"));
        assertTrue(responseContains("print current as PDF"));
    }
/****************/

}
