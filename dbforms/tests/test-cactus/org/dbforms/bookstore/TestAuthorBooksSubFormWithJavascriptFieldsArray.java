/*
 * $Header:
 * /cvsroot/jdbforms/dbforms/tests/test-cactus/org/dbforms/bookstore/TestBooksSingle.java,v
 * 1.6 2004/08/18 12:26:12 hkollmann Exp $ $Revision$ $Date: 2004/08/18
 * 12:26:12 $
 * 
 * DbForms - a Rapid Application Development Framework Copyright (C) 2001
 * Joachim Peer <joepeer@excite.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package org.dbforms.bookstore;

// package
// This class was generated by MaxQ (maxq.tigris.org)
// imports
import java.util.List;
import java.util.ArrayList;
import org.dbforms.util.KeyValuePair;
import org.dbforms.util.HttpTestCase;

import com.meterware.httpunit.*;
import com.meterware.httpunit.scripting.*;

// definition of test class
public class TestAuthorBooksSubFormWithJavascriptFieldsArray extends
		HttpTestCase {
	// Test method generated from the MaxQ Java generator
	public TestAuthorBooksSubFormWithJavascriptFieldsArray(String name) {
		super(name);
	}

	public void testTestAuthorBooksSubFormWithJavascriptFieldsArray()
			throws Exception {
		List list;
		get("http://localhost/bookstore/tests/testAuthorBooksSubFormWithJavascriptFieldsArray.jsp");
		printResponse();
		assertTrue(responseContains("dbFormFields[\"ORGANISATION\"] = new Array(\"f_0_0@root_2\");"));
		assertTrue(responseContains("dbFormFields[\"ISBN\"] = new Array(\"f_1_0@0@root_1\", \"f_1_1@0@root_1\");"));
		assertTrue(responseContains("dbFormFields[\"NAME\"] = new Array(\"f_0_0@root_1\");"));
		assertTrue(responseContains("dbFormFields[\"TITLE\"] = new Array(\"f_1_0@0@root_3\", \"f_1_1@0@root_3\");"));

		
		list = new ArrayList();
		list.add(new KeyValuePair("invtable", "0"));
		list.add(new KeyValuePair("invname_0", ""));
		list.add(new KeyValuePair("autoupdate_0", "false"));
		list.add(new KeyValuePair("fu_0",
				"/tests/testAuthorBooksSubFormWithJavascriptFieldsArray.jsp"));
		list.add(new KeyValuePair("lang", "de"));
		list
				.add(new KeyValuePair("source",
						"/bookstore/tests/testAuthorBooksSubFormWithJavascriptFieldsArray.jsp"));
		list.add(new KeyValuePair("customEvent", ""));
		list.add(new KeyValuePair("firstpos_0",
				"0%3A1%3A1-1%3A12%3AEco%2C+Umberto-2%3A15%3Aorganisation+11"));
		list.add(new KeyValuePair("lastpos_0",
				"0%3A1%3A1-1%3A12%3AEco%2C+Umberto-2%3A15%3Aorganisation+11"));
		list.add(new KeyValuePair("f_0_0@root_1", "Eco, Umberto"));
		list.add(new KeyValuePair("of_0_0@root_1", "Eco, Umberto"));
		list.add(new KeyValuePair("f_0_0@root_2", "organisation 11"));
		list.add(new KeyValuePair("of_0_0@root_2", "organisation 11"));
		list.add(new KeyValuePair("invtable", "1"));
		list.add(new KeyValuePair("invname_1", ""));
		list.add(new KeyValuePair("autoupdate_1", "false"));
		list.add(new KeyValuePair("fu_1",
				"/tests/testAuthorBooksSubFormWithJavascriptFieldsArray.jsp"));
		list.add(new KeyValuePair("lang", "de"));
		list
				.add(new KeyValuePair("source",
						"/bookstore/tests/testAuthorBooksSubFormWithJavascriptFieldsArray.jsp"));
		list.add(new KeyValuePair("customEvent", ""));
		list.add(new KeyValuePair("firstpos_1", "0%3A1%3A1-2%3A1%3A1"));
		list.add(new KeyValuePair("lastpos_1", "0%3A1%3A2-2%3A1%3A1"));
		list.add(new KeyValuePair("f_1_0@0@root_1", "Click here to check!"));
		list.add(new KeyValuePair("of_1_0@0@root_1", "3-423-12445-4"));
		list.add(new KeyValuePair("f_1_0@0@root_1", "3-423-12445-4"));
		list.add(new KeyValuePair("of_1_0@0@root_1", "3-423-12445-4"));
		list.add(new KeyValuePair("f_1_0@0@root_3",
				"Die Insel des vorigen Tages"));
		list.add(new KeyValuePair("of_1_0@0@root_3",
				"Die Insel des vorigen Tages"));
		list.add(new KeyValuePair("f_1_1@0@root_1", "Click here to check!"));
		list.add(new KeyValuePair("of_1_1@0@root_1", "3-423-12445-5"));
		list.add(new KeyValuePair("f_1_1@0@root_1", "3-423-12445-5"));
		list.add(new KeyValuePair("of_1_1@0@root_1", "3-423-12445-5"));
		list.add(new KeyValuePair("f_1_1@0@root_3", "Das Foucaltsche Pendel"));
		list.add(new KeyValuePair("of_1_1@0@root_3", "Das Foucaltsche Pendel"));
		list.add(new KeyValuePair("ac_new_1_14", "New"));
		list.add(new KeyValuePair("k_1_0@0@root", "0%3A1%3A1-2%3A1%3A1"));
		list.add(new KeyValuePair("f_1_0@0@root_2", "1"));
		list.add(new KeyValuePair("pf_1_0@0@root_2", "#,##0"));
		list.add(new KeyValuePair("k_1_1@0@root", "0%3A1%3A2-2%3A1%3A1"));
		list.add(new KeyValuePair("f_1_1@0@root_2", "1"));
		list.add(new KeyValuePair("pf_1_1@0@root_2", "#,##0"));
		list.add(new KeyValuePair("k_0_0@root", "0%3A1%3A1"));
		post(
				"http://localhost/bookstore/servlet/control;jsessionid=76AF3491CCEEEDA0F3F549C6E017217E",
				list);
		printResponse();
		assertTrue(responseContains("dbFormFields[\"ORGANISATION\"] = new Array(\"f_0_0@root_2\");"));
		assertTrue(responseContains("dbFormFields[\"ISBN\"] = new Array(\"f_1_ins0@root_1\");"));
		assertTrue(responseContains("dbFormFields[\"NAME\"] = new Array(\"f_0_0@root_1\");"));
		assertTrue(responseContains("dbFormFields[\"TITLE\"] = new Array(\"f_1_ins0@root_3\");"));

	}

	/** ************* */

}