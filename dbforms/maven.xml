<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ant="jelly:ant" xmlns:deploy="deploy" xmlns:doc="doc" xmlns:u="jelly:util" xmlns:j="jelly:core" default="">

  <ant:echo message="Hack to use xalan transformer!" />
  ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}

  <ant:echo message="set enviroment variable so that it can be used in property files" />
  <ant:property environment="env" />

  <goal name="maxq:start">
     <ant:echo message="please setup your browser to use localhost:8090 as proxy port!" />
     <ant:java  classname="com.bitmechanic.maxq.Main" fork="yes">
        <ant:classpath>
          <ant:pathelement path="dependend/maxq-0.95dev.jar"/>
	      <ant:pathelement path="target/dist/dbforms${pom.currentVersion}.jar"/>
	      <ant:pathelement path="${pom.getDependencyClasspath()}"/>
        </ant:classpath>
        <ant:sysproperty key="generator.properties.file" value="${basedir}/maxq.properties" />
     </ant:java>
  </goal>	

  <goal name="maxq">
     <attainGoal name="dbforms:startweb" />
     <attainGoal name="maxq:start" />
     <attainGoal name="dbforms:stopweb" />
  </goal>	

  <goal name="dbforms:startweb">
    <ant:echo message="start tomcat" />
    <attainGoal name="dbforms:bookstore" />
    <attainGoal name="appserver:install" />
     <j:thread>
        <attainGoal name="appserver:start" />
     </j:thread>
     <ant:sleep seconds="30" />
  </goal>

  <goal name="dbforms:stopweb">
    <ant:echo message="stop tomcat" />
     <j:thread>
        <attainGoal name="appserver:stop" />
     </j:thread>
     <ant:sleep seconds="30" />
    <attainGoal name="appserver:clean" />
  </goal>


  <goal name="dbforms:bookstore">
     <ant:ant antfile="build.xml" target="maven-build-bookstore" >
      	<ant:property name="dbforms.version" value="${pom.currentVersion}" />
      	<ant:property name="dist.dir" value="target/dist" />
      	<ant:property name="build.dir" value="target/build" />
     </ant:ant> 
  </goal>

  <goal name="dbforms:getrelease" description="generate a new release from SF">
    <ant:echo message="generate a new release from SF" />
    <ant:delete dir="temp/release"/>
    <u:tokenize var="scmTokens" delim=":">${pom.repository.connection}</u:tokenize>
    <ant:cvspass cvsroot=":${scmTokens[2]}:${scmTokens[3]}:${scmTokens[4]}" password="" />
    <ant:cvs
     	cvsRoot=":${scmTokens[2]}:${scmTokens[3]}:${scmTokens[4]}" 
     	command="--lf co -P" 
     	compression="true" 
     	package="${scmTokens[5]}" 
     	dest="target/release" 
     />
  </goal>

  <goal name="dbforms:doc" description="generate dbforms documentation: taglib docu and manual">
    <ant:echo message="building the DbForms documentation user guide and jsp tag library" />
    <ant:ant antfile="docs.xml" target="maven-build-doc">
      	<ant:property name="dbforms.version" value="${pom.currentVersion}" />
      	<ant:property name="doc.dir" value="target/docs" />
      	<ant:property name="dist.dir" value="target/dist" />
    </ant:ant>
     <ant:copy todir="target/docs/img" overwrite="true">
    	<ant:fileset dir="doc/img">
           <ant:include name="*" />    		
    	</ant:fileset>
    </ant:copy>
     <ant:copy todir="target/docs/taglib" overwrite="true">
    	<ant:fileset dir="doc/taglib">
           <ant:include name="*" />    		
    	</ant:fileset>
    </ant:copy>
  </goal>

  <goal name="dbforms:dist" description="generates the distribution via build.xml">
    <ant:echo message="building the distribution using ant " />
    <deploy:copy-deps todir="target/dependend" />
    <ant:echo message="generate version ${pom.currentVersion}" />
    <ant:ant antfile="build.xml" target="maven-build-release">
	<ant:property name="dbforms.version" value="${pom.currentVersion}" />
      	<ant:property name="dist.dir" value="target/dist" />
      	<ant:property name="taglib.dir" value="target/doc/taglib" />
    </ant:ant>
  </goal>
  
  <goal name="dbforms:weekly">
     <ant:mkdir dir="target/docs/weekly"/>
     <ant:copy todir="target/docs/weekly" overwrite="true">
    	<ant:fileset dir="target/dist">
           <ant:include name="*.zip" />    		
           <ant:include name="*.tgz" />    		
           <ant:include name="*.war" />    		
    	</ant:fileset>
    </ant:copy>
  </goal>	
  
  <goal name="dbforms:deploy" description="do the whole deployment: generates site, generates doc, generates distribution">
    <ant:echo message="starting deploying site" />
    <ant:echo message="0. cleanup" />
    <attainGoal name="clean" />
    <ant:echo message="2. generate whole site" />
    <attainGoal name="site:generate" />
  </goal>


  <!-- change crlf before jalopy task -->
  <preGoal name="jalopy:format">
    <ant:echo message="fixcrlf" />
    <ant:ant antfile="build.xml" target="forcedos" />
  </preGoal>


  <!-- neccesary to get cactus report!!! -->
  <preGoal name="cactus:report">
    	<ant:echo message="run cactus tests" />
    	<attainGoal name="cactus:test"/>
  </preGoal>

  <!-- to init the appserver with bookstore example -->
  <preGoal name="appserver:init">
     <ant:echo message="copy config" />
     <ant:copy todir="${maven.appserver.conf.dir}/conf/" overwrite="true">
    	<ant:fileset dir="${maven.conf.dir}/${maven.appserver.name}-${maven.appserver.version}" />
    </ant:copy>
    <ant:echo message="copy bookstore.war" />
    <ant:copy tofile="${maven.appserver.conf.dir}/webapps/bookstore.war" overwrite="true">
    	<ant:fileset dir="target/dist">
           <ant:include name="bookstore*.war" />    		
    	</ant:fileset>
    </ant:copy>
  </preGoal>

  <!-- We have our own ChangeLog file! -->
  <postGoal name="changes:report">
    <ant:echo message="build changes.xml" />
    <doc:text-xdoc 
    	title="Changes" 
    	section="CHANGES" 
    	output="target/generated-xdocs/changes-report.xml" 
    	inputFile="ChangeLog" 
    />
  </postGoal>

  <postGoal name="site:generate">
    <ant:echo message="build the distribution via build.xml" />
    <attainGoal name="dbforms:dist" />
    <ant:echo message="copy weekly build" />
    <attainGoal name="dbforms:weekly" />
  </postGoal>

  <preGoal name="site:run-reports">
     <ant:delete dir="${maven.appserver.conf.dir}/webapps/bookstore" />
     <ant:echo message="generate dbforms documentation" />
     <attainGoal name="dbforms:doc" />
  </preGoal>

  <postGoal name="site:run-reports">
    <ant:echo message="generate releasenotes" />
    <ant:mkdir dir="target/generated-xdocs" />
    <doc:text-xdoc 
    	title="Release Notes for ${pom.currentVersion}" 
    	section="Release Notes" 
    	output="target/generated-xdocs/releasenotes.xml" 
    	inputFile="ReleaseNotes_v${pom.currentVersion}.txt" 
    />
  </postGoal>

   <postGoal name="war:webapp"> 
    <ant:echo message="compile interceptors" />
    <ant:javac 
    	srcdir="${maven.war.webapp.dir}/WEB-INF/src"
    	destdir="${maven.war.webapp.dir}/WEB-INF/classes" 
    	debug="on"
    	optimize="off"
    	deprecation="off"
    >
      <ant:classpath>
	      <ant:pathelement path="${pom.getDependencyClasspath()}"/>
      </ant:classpath>
    </ant:javac>
   </postGoal> 


</project>

