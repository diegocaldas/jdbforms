<?xml version="1.0" encoding="UTF-8"?>
<chapter>
 <title id="qSupp">Query Support</title>
 
    <para>To make the usage of sql queries more flexible in dbforms, you can use the query element which can be used to:</para>
    <itemizedlist mark="opencircle">
      <listitem>
        <para>Create 
          <emphasis role="italic">group by</emphasis> with flexible 
          <emphasis role="italic">where</emphasis> part.
        </para>
      </listitem>
      <listitem>
        <para>Create joined sql with a flexible 
          <emphasis role="italic">join</emphasis> statement
        </para>
      </listitem>
      <listitem>
        <para>Create an alias of an existing table</para>
      </listitem>
      <listitem>
        <para>Make dynamic changes of the query which prevents the use of a view in the database.</para>
      </listitem>
    </itemizedlist>
    <sect1>
      <title>
        <emphasis role="bold">Examples:</emphasis>
      </title>
      <sect2>
        <title>group by</title>
        <para>In a table with:</para>
        <blockquote>
          <screen>
create table 
            <emphasis role="bold">values</emphasis>

    (cno integer not null primary key,

        type char(20) not null,

        date timestamp not null,

        value number not null

   )

          </screen>
        </blockquote>
        <para>You need a query with:</para>
        <blockquote>
          <screen>
Select type, sum(value) as sumValue where date &lt; ? 
group by type having sumValue &gt; ?
</screen>
        </blockquote>
        <para>Because the date should be selected by the user, you can not use a fixed view in the database. However, this is possible using the 
          <emphasis role="bold">query</emphasis> element in dbforms_config.xml:
        </para>
        <blockquote>
          <screen>
            <emphasis role="bold">&lt;dbforms-config&gt;</emphasis>
...

            <emphasis role="bold">&lt;query</emphasis> name="valuesGroup" from="values" groupBy=type&gt;
    &lt;field="type" type="char"&gt;
    &lt;field="sumValue" expression=sum(value) type="number"&gt;
    
    &lt;search="date" type="timestamp"&gt;
    
&lt;/query&gt;     

          </screen>
        </blockquote>
      </sect2>
      <sect2>
        <title>join</title>
        <blockquote>
          <screen>
            <emphasis role="bold">&lt;dbforms-config&gt;</emphasis>
...

            <emphasis role="bold">&lt;query</emphasis> name="viewname" from="table1 left join table2 on table1.id = table2.id"&gt;
    &lt;field1 type=char&gt;
&lt;/query&gt;      

          </screen>
        </blockquote>
      </sect2>
      <sect2>
        <title>Simple alias</title>
        <blockquote>
          <screen>
            <emphasis role="bold">&lt;dbforms-config&gt;</emphasis>
...

            <emphasis role="bold">&lt;query</emphasis> name="aliasname" from="table" /&gt;

          </screen>
        </blockquote>
        <itemizedlist mark="opencircle">
          <listitem>
            <para>can be used to have the same table more than once on a page.</para>
          </listitem>
          <listitem>
            <para>inherits all field definitions from the table.</para>
          </listitem>
          <listitem>
            <para>is updateable!</para>
          </listitem>
          <listitem>
            <para>may be another query.</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
    <sect1>
      <title>Use within dbforms-config.xml</title>
      <para>The following example is taken from <computeroutput>src\org\dbforms\resources\dbforms-config.xsd</computeroutput> It has been changed here from schema style to DTD sytle for those more familiar with the latter.  However, no DTD for dbforms.xml actually exists.</para>
      <para>
        <table>
          <title>Excerpts in DTD style of dbforms-config.xml</title>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry>  &lt;!ELEMENT query (field*, search*)&gt;</entry>
                <entry/>
              </row>
              <row>
                <entry>  &lt;!ATTLIST query</entry>
                <entry/>
              </row>
              <row>
                <entry>    name              CDATA #REQUIRED</entry>
                <entry>Name of the table, same meaning as in table attribute</entry>
              </row>
              <row>
                <entry>    from              CDATA #IMPLIED</entry>
                <entry>
                  Name of the parent table. This table must be defined within dbforms-config.xml. If you leave out everything else, query is used as an updatable alias for the prior defined table!
                  If missing, 
                </entry>
              </row>
              <row>
                <entry>    groupBy           CDATA #IMPLIED</entry>
                <entry>Group by clause for select</entry>
              </row>
              <row>
                <entry>    where             CDATA #IMPLIED</entry>
                <entry>Starting where part of select</entry>
              </row>
              <row>
                <entry>    followAfterWhere  CDATA #IMPLIED</entry>
                <entry>
                  Must be OR or AND, will be appended to the starting where part if dbforms have build an own where part:
                  Where + followAfterWhere + where_from_dbforms
                </entry>
              </row>
              <row>
                <entry>    orderWithPos     CDATA #IMPLIED</entry>
                <entry>If true, the order part will build with fieldnumber instead of fieldname</entry>
              </row>
              <row>
                <entry>     distinct        CDATA #IMPLIED</entry>
                <entry>If true, select will be build as select distinct</entry>
              </row>
              <row>
                <entry>&gt;</entry>
                <entry/>
              </row>
              <row>
                <entry/>
              </row>
              <row>
                <entry>  &lt;!ATTLIST field</entry>
                <entry/>
              </row>
              <row>
                <entry>    name             CDATA #REQUIRED</entry>
                <entry>Name of field in table</entry>
              </row>
              <row>
                <entry>    type             CDATA #IMPLIED</entry>
                <entry>Type of field</entry>
              </row>
              <row>
                <entry>    autoInc          CDATA #IMPLIED</entry>
                <entry>stores if the field is AUTOINCremental</entry>
              </row>
              <row>
                <entry>    key              CDATA #IMPLIED</entry>
                <entry>=TRUE if field is key field</entry>
              </row>
              <row>
                <entry>    sortable         CDATA #IMPLIED</entry>
                <entry>all non-key-fields you want to be sortable should be declared &#147;sortable&#148; in the XML-config file</entry>
              </row>
              <row>
                <entry>    expression       CDATA #IMPLIED</entry>
                <entry>
                  Expression of field. Results in
                  expression + AS + name 
                </entry>
              </row>
              <row>
                <entry>  &gt;</entry>
                <entry/>
              </row>
              <row>
                <entry/>
              </row>
              <row>
                <entry>  &lt;!ELEMENT search EMPTY&gt;</entry>
                <entry>
                  All elements of type search can be used as normal fields in dbforms. While construction the sql statement these fields will not be included in the from part. They will only be used to generate the where part of the query.
                  If the query has a groupBy statement, these fields will be used in the where part of the query if needed, not in the having part!
                </entry>
              </row>
              <row>
                <entry>  &lt;!ATTLIST search</entry>
                <entry/>
              </row>
              <row>
                <entry>    name             CDATA #REQUIRED</entry>
                <entry>Name of field in table or alias</entry>
              </row>
              <row>
                <entry>    expression       CDATA #IMPLIED</entry>
                <entry>
                  Expression of field. Results in
                  expression + AS + name 
                </entry>
              </row>
              <row>
                <entry>  &gt;</entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </table>
      </para>
      <para/>
    </sect1>
  
</chapter>
