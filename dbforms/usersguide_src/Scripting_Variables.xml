<?xml version="1.0" encoding="UTF-8"?>
<chapter>
  <title id="scrip_var">Scripting Variables
</title>
  <para>Various DbForms tags such as &lt;dbform&gt; and &lt;body&gt;, make internal information available to the embedded JSP code via 
    <emphasis role="bold">scripting variables.</emphasis>
  </para>
  <para>This mechanism used for passing these values over is called 
    <emphasis role="bold">Tag Extra Info</emphasis> and is part of the Java Server Pages specification (refer to spec version 1.1, chapter 5.5)

  </para>
  <blockquote>
    <para>Please note:</para>
    <para>The list of scripting values is still growing and some names may be changed in the near future.</para>
  </blockquote>
  <para/>
  <para>
    <table>
      <title>List of scripting variables</title>
      <tgroup cols="3">
        <tbody>
          <row>
            <entry>
              <emphasis role="bold">Scripting variables</emphasis>
            </entry>
            <entry>
              <emphasis role="bold">Type</emphasis>
            </entry>
            <entry>
              <emphasis role="bold">Description</emphasis>
            </entry>
          </row>
          <row>
            <entry>searchFieldNames_tableName</entry>
            <entry>java.util.Hashtable</entry>
            <entry>
              Contains the encoded names used for selecting the search criteria fields (firstname, lastname, etc.)
              Scope: inside the respective DbForms- element
            </entry>
          </row>
          <row>
            <entry>searchFieldModeNames_ tableName</entry>
            <entry>java.util.Hashtable</entry>
            <entry>
              Contains the encoded names used for specifying the search modes (and, or) of each search criteria.
              Scope: inside the respective DbForms- element
            </entry>
          </row>
          <row>
            <entry>searchFieldAgorithmNames_tableName</entry>
            <entry>java.util.Hashtable</entry>
            <entry>
              Contains the encoded names used for specifying the algorithm type (weak, sharp) of each search criteria.
              Scope: inside the respective DbForms-element
            </entry>
          </row>
          <row>
            <entry>currentRow_tableName</entry>
            <entry>java.util.Hashtable</entry>
            <entry>
              Contains the field-values of the current row. This construct is similar 
              to &#147;associated Arrays used in many Perl/PHP modules
              Example:
              String email = (String) currentRow_customers.get("email");
              Scope: inside the respective &lt;body&gt;-tag</entry>
          </row>
          <row>
            <entry>position_tableName</entry>
            <entry>java.lang.String</entry>
            <entry>
              Contains the encoded key-fieldvalues of the current row.
              Scope: inside the respective &lt;body&gt;-element
            </entry>
          </row>
          <row>
            <entry>rsv_tableName</entry>
            <entry>org.dbforms.util.ResultSetVector</entry>
            <entry>
              Refers to the ResultSetVector containing the data to display. 
              Use the methods getField() getFieldAsObject to retrieve data from the vector.
              Example: if we want to print out a string representation of the current value of the 
              field "reporter" in table "bugs", then we would write: 
              &lt;%= rsv_bugs.getField("reporter")%&gt; 
              we also could write: 
              &lt;%= rsv_bugs.getFieldAsObject("reporter") %&gt; 
              what is the difference between getField(String) and getFieldAsObject(String): 
              getField always returns a String (as long as the fieldname is correct), 
              even it the underlying data in the database has the value NULL. 
              getFieldAsObject returns the Object value as provided by the ResultSet.getObject(int) method. 
              This means NULL-values will be returned as null and not as empty ""-Strings.
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </para>
  <para/>
</chapter>
