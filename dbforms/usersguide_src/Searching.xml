<?xml version="1.0" encoding="UTF-8"?>
 
	<chapter>
		<title>Searching
</title>
		<sect1>
			<title>Introduction
</title>
			<para>Searching is another must-have functionality for a database application framework like DbForms.
</para>
			<para>DbForms allows you to create search-forms very quickly. The number of fields to be searched, the kind of input widgets (text field, textArea, select box, etc.), the search (compare)  algorithms and the search criteria combinations are easily defined by the developer.
</para>
			<para>All you have to do is:
                        
</para>

<itemizedlist mark="opencircle">
<listitem>
<para>decide which fields you want to make searchable.
</para>
</listitem>
<listitem>
<para>decide if you want the user to choose the criteria-combination-mode or if you want to use a (hidden) default.
</para>
</listitem>
<listitem>
<para>decide if you want the user to choose the kind of search algorithm to be used or if you want to use a (hidden) default.
</para>		
</listitem>
<listitem>
<para>define a kind of search-button which will submit the search fields to the controller.
</para></listitem>
</itemizedlist>			
			
			<para>The fields holding search-criteria, search-criteria-combing-mode and search-algorithms <emphasis role="bold">must follow a special naming convention</emphasis> (in order to allow searching in nested forms, etc). This makes the whole thing look a bit complicated, but it really isnt, as you will see below.
 This naming convention is prepared for you in hashtable objects accessible as scripting variables. (refer to the chapter on <link linkend='scrip_var'>Scripting Variables</link>
</para>
			<para/>
			<para>
				<table>
					<title/>
					<tgroup cols="2">
						<tbody>
							<row>
								<entry><emphasis role="bold">Name of scripting variable Hashtable</emphasis></entry>
								<entry><emphasis role="bold">Description</emphasis></entry>
							</row>
							<row>
								<entry>searchFieldNames_tableName</entry>
								<entry>Contains the encoded names used for selecting the search criteria fields (firstname, lastname, etc.)
Example:
searchFieldNames_cust.get(firstname);</entry>
							</row>
							<row>
								<entry>searchFieldModeNames_tableName</entry>
								<entry>Contains the encoded names used for specifying the search modes (and, or) of each search criteria
Example:
searchFieldModeNames_cust.get(firstname)</entry>
							</row>
							<row>
								<entry>searchFieldAgorithmNames_tableName</entry>
								<entry>Contains the encoded names used for specifying the algorithm type (weak, sharp) of each search criteria
Example:
searchFieldAlgorithmNames_cust.get(firstname)</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</para>
			<para>Table 3 - Example for dynamic filtering
</para>
		</sect1>
		<sect1>
			<title>Search Algorithms
</title>
			<para>The behaviour of searching is selected by different algorithm types:
</para>
			<para/>
			<para>
				<table>
					<title/>
					<tgroup cols="2">
						<tbody>
							<row>
								<entry><emphasis role="bold">possible values of search field algorithm:</emphasis>
</entry>
								<entry><emphasis role="bold">Description  -
Searching is done with:</emphasis></entry>
							</row>
							<row>
								<entry>sharp</entry>
								<entry> =           this is the default behavior</entry>
							</row>
							<row>
								<entry>sharpLT</entry>
								<entry> &lt;</entry>
							</row>
							<row>
								<entry>sharpLE</entry>
								<entry> &lt;=</entry>
							</row>
							<row>
								<entry>sharpGT</entry>
								<entry> &gt;</entry>
							</row>
							<row>
								<entry>sharpGE</entry>
								<entry> &gt;=</entry>
							</row>
							<row>
								<entry>sharpNE</entry>
								<entry> &lt;&gt;</entry>
							</row>
							<row>
								<entry>sharpNULL</entry>
								<entry> is null</entry>
							</row>
							<row>
								<entry>sharpNOTNULL</entry>
								<entry> Not is null</entry>
							</row>
                                                               
                                                        <row> <entry>sharpExtended</entry>
                                                                <entry morerows='7' valign='middle'>In this mode the search value is parsed for special chars -- see list below. The default search operator is taken from the list above.</entry>
                                                        </row>
                                                        <row><entry>sharpLTExtended</entry>
                                                        </row>
                                                       
                                                        <row><entry>sharpLEExtended</entry>
                                                        </row>
                                                        <row><entry>sharpGTExtended</entry>
                                                        </row>
                                                        <row><entry>sharpGEExtended</entry>
                                                        </row>
                                                        <row><entry>sharpNEExtended</entry>
                                                        </row>
                                                        <row><entry>sharpNULLExtended</entry>
                                                        </row>
                                                        <row><entry>sharpNOTNULLExtended</entry>
                                                        </row>
						</tbody>
					</tgroup>
				</table>
			 </para>
			<para>List of chars:
</para>
			<para>
				<table>
					<title/>
					<tgroup cols="2">
						<tbody>
							<row>
								<entry>weak</entry>
								<entry> like</entry>
							</row>
							<row>
								<entry>weakStart</entry>
								<entry> like,  % is added in front of value</entry>
							</row>
							<row>
								<entry>weakEnd</entry>
								<entry> like, % is appended to value</entry>
							</row>
							<row>
								<entry>weakStartEnd</entry>
								<entry> like, % is added in front of value and % is appended to value</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</para>
                        <para/>
			<para>If extended mode is set, the values will be parsed for special chars at the beginning:
		 </para>
			<para>
				<table>
					<title/>
					<tgroup cols="2">
						<tbody>
							<row>
								<entry>Special chars in search values
</entry>
								<entry>Description</entry>
							</row>
							<row>
								<entry>=</entry>
								<entry>Search operator is sharp</entry>
							</row>
							<row>
								<entry>&lt;&gt;</entry>
								<entry>Search operator is sharpNE</entry>
							</row>
							<row>
								<entry>!=</entry>
								<entry>Search operator is sharpNE</entry>
							</row>
							<row>
								<entry>&gt;=</entry>
								<entry>Search operator is sharpGE</entry>
							</row>
							<row>
								<entry>&gt;</entry>
								<entry>Search operator is sharpGT</entry>
							</row>
							<row>
								<entry>&lt;=</entry>
								<entry>Search operator is sharpLE</entry>
							</row>
							<row>
								<entry>&lt;</entry>
								<entry>Search operator is sharpLT</entry>
							</row>
							<row>
								<entry>[NULL]</entry>
								<entry>Search operator is sharpNULL</entry>
							</row>
							<row>
								<entry>[!NULL]</entry>
								<entry>Search operator is sharpNOTNULL</entry>
							</row>
							<row>
								<entry>value1-value2</entry>
								<entry>Results in fieldname &lt;= value1 and fieldname &gt;= value2</entry>
							</row>
							<row>
								<entry>value1-</entry>
								<entry>Results in fieldname &lt;= value1</entry>
							</row>
							<row>
								<entry>-value2</entry>
								<entry>Results in fieldname &gt;= value2</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</para>
			 
			<example>
				<title>Search Example</title>
				<programlisting> 
This is a fully functional search panel. It is included in the example application included in the DbForms distribution.
You may also test it on the running live samples at the DbForms Website.
 
		 
Figure 20 Example for dynamic filtering
 
    This is the code responsible for creating the panel above. In the context of this example, the use of the hashtable should be clear.
    As mentioned above, this mechanism may be applied on any other database fields, using any html widgets for data input.
 
	&lt;table cellspacing="0" cellpadding="1" width="550"&gt; 
            &lt;tr bgcolor="#F7A629"&gt; 
		&lt;td bgcolor="#F7A629"&gt;&lt;b&gt;Search a customer&lt;/b&gt;&lt;/td&gt; 
		&lt;td colspan="2" bgcolor="#F7A629"&gt;nbsp;&lt;/td&gt; 
		&lt;td bgcolor="#F7A629"&gt;
                    &lt;input value="Search!" 
                              type="button" 
                              onClick="javascript:document.dbform.submit()"&gt;
                &lt;/td&gt; 
            &lt;/tr&gt; 
            &lt;tr bgcolor="#CCBBCC"&gt; 
		&lt;td&gt;Field&lt;/td&gt; 
		&lt;td&gt;Value&lt;/td&gt; 
		&lt;td&gt;Combining mode&lt;/td&gt; 
		&lt;td&gt;Search Algorithm&lt;/td&gt; 
            &lt;/tr&gt; 
            &lt;tr bgcolor="#BBCCBB"&gt; 
		&lt;td&gt;First name&lt;/td&gt; 
		&lt;td&gt;
                    &lt;input type="text"
                              name="&lt;%=searchFieldNames_customer.get("firstname") %&gt;" 
                              size="17"
                    /&gt;
                &lt;/td&gt; 
		&lt;td&gt; 
                    &lt;input type="radio" checked
                              name="&lt;%= searchFieldModeNames_customer.get("firstname") %&gt;"
                              value="and"&gt; AND
                    &lt;input type="radio" 
                              name="&lt;%= searchFieldModeNames_customer.get("firstname") %&gt;
                              value="or"&gt; OR
		&lt;/td&gt; 
		&lt;td&gt; 
                    &lt;input type="checkbox" 
                              name="&lt;%= searchFieldAlgorithmNames_customer.get("firstname") %&gt;"
                              size="30" 
                              value="weak"&gt;Weak
		&lt;/td&gt; 
            &lt;/tr&gt; 
            &lt;tr bgcolor="#BBCCBB"&gt; 
                &lt;td&gt;Last name&lt;/td&gt; 
		&lt;td&gt;
                &lt;input type="text"
                          name="&lt;%= searchFieldNames_customer.get("lastname") %&gt;"
                          size="17"/&gt;
                &lt;/td&gt; 
		&lt;td&gt;
                    &lt;input type="radio" checked  
                              name="&lt;%= searchFieldModeNames_customer.get("lastname") %&gt;"
                              value="and"          
                    &gt; AND
                    &lt;input type="radio" 
                              name="&lt;%= searchFieldModeNames_customer.get("lastname") %&gt;
                              value="or"
                    &gt; OR
		&lt;/td&gt; 
		&lt;td&gt; 
                    &lt;input type="checkbox" 
                              name="&lt;%= searchFieldAlgorithmNames_customer.get("lastname") %&gt;"
                              size="30"
                              value="weak"
                    &gt;Weak
		&lt;/td&gt; 
            &lt;/tr&gt; 
		 
		</programlisting>
			</example>
		</sect1>
	</chapter>
 
