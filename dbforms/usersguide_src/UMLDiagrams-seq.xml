<?xml version="1.0" encoding="UTF-8"?>

<chapter>
  <title>Sequence diagrams</title>

  <sect1>
    <title>The controller</title>
    <para>
      This <ulink url="./images/figures/uml/sequence/event-servletController.usd.png">diagram</ulink>
      shows the interaction between the Controller class that receives the incoming 
      http request and all the other classes that manage the event creation and its procession.
    </para>
    <sect2>
      <title>Steps</title>
      <para>
        <itemizedlist mark="opencircle">

          <listitem>
            <para>
              The controller servlet gets the incoming http request that contains the data
              to process; the request object contains also the data that identify the event 
              to instantiate and execute.
            </para>
            <para>
              Then, the controller instantiates the EventEngine object.
            </para>
          </listitem>

          <listitem>
            <para>
              The controller servlet calls the eventEngine.generatePrimaryEvent() method.
              generatePrimaryEvent() gets the action parameter from the request, try to 
              identify the related event type (database or navigation) and then uses the appropriate factory
              to create the related event object. generatePrimaryEvent() returns the event 
              object to the controller.
            </para>         
          </listitem>

          <listitem>
            <para>
              The controller servlet checks if the returned event object is an instance of a
              Database event (i.e.: insert, delete, update events).
              If yes, validate the incoming data 
              (optional: if hidden formValidatorName exist and it's an Update or Insert event,
               execute the doValidation with Commons-Validator) and process the event object.
            </para>
			<para>
			  Note: the Navigation events are managed by the DbFormsTag class.
			  The controller manages only the database event type.
			</para>
          </listitem>

          <listitem>
            <para>
              The controller servlet checks if the evetEngine has got involved tables:
			  it find out which tables where on the jsp page (the view); 
			  one jsp file may contain multiple (db)forms, and each forms could contain many
			  subforms nested inside.
            </para>         
			<para>
			  If yes, the controller executes the 
			</para>
          </listitem>

        </itemizedlist>
      </para>
    </sect2>
  </sect1>

</chapter>
