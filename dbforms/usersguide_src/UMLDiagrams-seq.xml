<?xml version="1.0" encoding="UTF-8"?>

<chapter>
  <title>Sequence diagrams</title>

  <sect1>
    <title>The controller</title>
    <para>
      This <ulink url="./images/figures/uml/sequence/event-servletController.usd.png">diagram</ulink>
      shows the interaction between the Controller class that receives the incoming 
      http request and all the other classes that manage the event creation and its procession.
    </para>
    <sect2>
      <title>Steps</title>
      <para>
        <itemizedlist mark="opencircle">

          <listitem>
            <para>
              The controller servlet gets the incoming http request that contains the data
              to process; the request object contains also the data that identify the event 
              to instantiate and execute.
            </para>
            <para>
              Then, the controller instantiates the  <computeroutput>EventEngine</computeroutput> object.
            </para>
          </listitem>

          <listitem>
            <para>
              The controller servlet calls the <computeroutput>eventEngine.generatePrimaryEvent()</computeroutput> method.
              <computeroutput>generatePrimaryEvent()</computeroutput> gets the <computeroutput>action</computeroutput> 
			  parameter from the <computeroutput>request</computeroutput>, try to 
              identify the related event type (database or navigation) and then uses the appropriate factory
              to create the related event object. <computeroutput>generatePrimaryEvent()</computeroutput> returns the event 
              object to the controller.
            </para>         
          </listitem>

          <listitem>
            <para>
              The controller servlet checks if the returned event object is an instance of a
              <computeroutput>Database event</computeroutput> (i.e.: insert, delete, update events).
              If yes, validate the incoming data 
              (the validation step occurs only if the <computeroutput>formValidatorName</computeroutput> request parameter 
			  exist and the current event is an <computeroutput>Update</computeroutput> 
              or <computeroutput>Insert</computeroutput> event.
			  The controller executes the <computeroutput>doValidation()</computeroutput> method 
			  that uses the <computeroutput>Commons-Validator</computeroutput> Jakarta component) 
               and process the event object.
            </para>
            <para>
              Note: the Navigation events are managed by the <computeroutput>DbFormsTag</computeroutput> class.
              The controller manages only the database event type.
            </para>
          </listitem>

          <listitem>
            <para>
              The controller servlet stores the event reference into the session context.
              MUST UPDATE the diagram picture...
            </para>         
          </listitem>

          <listitem>
            <para>
              The controller servlet checks if the evetEngine has got involved tables:
              it find out which tables where on the jsp page (the view); 
              one jsp file may contain multiple (db)forms, and each forms could contain many
              subforms nested inside.
            </para>         
            <para>
              If yes, the controller gets the list of all the involved tables, generates 
              and executes update events for all of them.
            </para>
          </listitem>

          <listitem>
            <para>
              The controller servlet forwards the client to the target resource referred from the 
              <computeroutput>followUp</computeroutput>
              attribute of the jsp form if there are no errors.
              Else redirects to the resource specified by the <computeroutput>followUpOnError</computeroutput> form attribute.
            </para>         
          </listitem>

        </itemizedlist>
      </para>
    </sect2>
  </sect1>

</chapter>
