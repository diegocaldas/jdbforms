Tuesday, October 22, 2002:
(Henner.Kollmann@aucos.de):

        - taglib_docu.xml:
		extended message tag
	- DBMessageTag.java
		extend with parameters
	- SQLUtil.java
		createAppropriateTimeStamp
	- FieldValue.java
		new searching
	- DBFormTag.java
		new searching

Sunday, October 13, 2002:
(Henner.Kollmann@aucos.de):

        - taglib_docu.xml:
		added new tag DbPos
		added onSubmit for dbForms
 	
 	- DbPosTag.java:
		renders a position to use with keyToDestPos.
 		This is the same string wich would be used as 
 		value in the DbassociatedRadioTag.
	- FieldValue.java:
 		extend search algorithm with 
       		WEAK_START, WEAK_END, WEAK_START_END
       		results in like '%search', 'search%', '%search%'
	- dbForms.java:
 		added onSubmit support
 		extend search algorithm with 
       		WEAK_START, WEAK_END, WEAK_START_END
       		results in like '%search', 'search%', '%search%'
 	- DbFormsValidatorUtil.java 
 		Catch errors while getXMLErrorMessage
 	- Table.java 
 		getFieldValuesFromPositionAsHt: position.length() maybe 0
 		createOrderFieldValues        : use the default order if result.size == 0, 
 						not only if result == null 
						This could happens if  all parameters 
						with sort_  are set to none
 	- DbAssociatedRadioTag.java 
 		set checked=true for the first row
 	- GotoEvent.java 
 		correct processEvent: postion maybe of size == 0


Thursday, September 19, 2002:
(kraemer@rz.uni-kiel.de):
I have tried to integrate several enhancements contributed
by the dbforms community for devgui itself and the xsl stylesheets
used by devgui

----------------------------------------------------------------

 - Enhancements to XSL stylesheets (all contrib. Sebastian Bogaci, special 
       thanks also for further help and discussion)

    - More usage of extended stylesheet dbforms.css to make generated
      JSPs more configurable. A lot of attributes like color, background color,
      fonts etc. can now be easily changed at a central place.
      If you don't like the appearance of generated pages, it is now easy
      to change it.
   
    - Parameter multipart="true" is automatically set when fields of
      type 'blob', 'image' or 'diskblob' are detected within a table.

    - Made generated pages now really work when schema name
      is included in table name by substituting '.' in file and
      variable names by an '_'. Example: currentRow_schmema1.table1 is
      an illegal variable name in Java, must use currentRow_schmema1_table1 

    - First integration of JavaScript Calendar written by 
      Robert W. Husted to edit date fields. See pages
      http://developer.iplanet.com/viewsource/husted_calendar/husted_calendar.html
      and http://jscal.sourceforge.net/ 
      for details of this application. Integration into dbforms stylesheets 
      by Sebastian Bogaci. The calender is not included in generated pages by default, 
      activation can be done by setting a (new) checkbox within devgui
      on xsl transformation panel.

      See also (soon) dbforms documentation about the calendar

 - Enhancements to DevGui:

    - Automatic detection of auto-incremented (aka identity) fields
      for some databases (contrib. Sebastian Bogaci). This information
      is written to generated xml files by setting attribute autoInc="true".

      Currently we (hope to) have support for MySQL, DB2 (Sebastian) and
      Sybase (thanks to Eric Pugh). If you know how to add support for
      more systems, please send a mail to dbforms-interest mailing list.
 
    - New checkbox to include JavaScript calendar in JSPs generated by
      xsl transformations (see above).
 
    - New checkbox to write standard names for unknown field types to generated
      dbforms-config.xml file. 
   
    - Now really fixed bug that could lead to problems when having tables
      with same name in different schemas.

    - Date format inside dbforms config file can now be set in DevGui.

    - Added Look & Feel Menu.
      
 - New Readme file for DevGui 

 - DevGui can now be startet without Gui to regenerate a dbforms config file.
   This can be done from command line as well as from a running Java program.
   To do so, you have to:

     - create a property file containing connection information etc
       This may be done in a standard gui session of DevGui
     - call it via:
     
       java org.dbforms.devgui.DevGui createconfigfile <propertyfilename>
     
       or
     
       java org.dbforms.devgui.DevGui createconfigfile <propertyfilename> <outputfilename> 
     
     Here is an example:
     
     $ java org.dbforms.devgui.DevGui createconfigfile /home/sweethome/dbex.props outout.xml
     
   If the outputfilename is not set on command line, it will be taken from
   property file. Normally the property file should be once generated in
   a gui session. It can later be used in command line sessions to regenerate
   the dbforms-config.xml file after changes to database.
     
   It is also possible to call the main() method of class DevGui from
   within a running java program like in
     
       String[] pars = {"createconfigfile","/home/sweethome/dbex.props"};
       org.dbforms.devgui.DevGui.main(pars);
     
   The other DevGui functionality (XSL transformation) can currently not be called
   via command line, maybe later. 



__________________________________________________________________________________________________
__________________________________________________________________________________________________

Tuesday, May 21, 2002
DbForms version 1.1.2
Grunikiewicz.philip@hydro.qc.ca


These enhancements are the direct result of your feedback and Eric Beaumier's hard work.  


New features
---------------------------------


textField  - tag
password - attribute
--------------------

If 'password' attribute is set to true, the textField tag will render a 'password' type (html) 
input tag.  This allows developers, to make available, visually encrypted input field.



localeKey - attribute
Session scope (web.xml)
-----------------------

Dbforms will first look in the Session object to see if a locale object is available. If not, it
will retrieve a locale from the request object.

The attribute used to retrieve the locale object from the session can be specified by the developer.  
(The locale object may have been placed in a given attribute by another framework [ie: Struts]).  
To specify the attribute to use, set the following:

In web.xml

<init-param>
	<param-name>localeKey</param-name>
	<param-value>AttributeNameWhereOtherFrameworkStoresLocaleObject</param-value>	
</init-param>

If 'localeKey' is not set by the user, DbForms will store, for future reference, the locale object
in the attribute named 'org.dbforms.LOCALE'.


Bug Fixes and general maintenance
---------------------------------

The generated 'javascriptValidation' methods now support more complex (db)forms. (Multiple data rows, insert mode)
The generated 'javascriptFieldsArray' method has also been enhanced to support more complex (db)forms.

__________________________________________________________________________________________________
__________________________________________________________________________________________________

Friday, May 3, 2002
DbForms version 1.1.1
Grunikiewicz.philip@hydro.qc.ca


These enhancements are the direct result of your feedback and Eric Beaumier's hard work.  


New features
---------------------------------


dbform, input  - tags
readOnly - attribute
------------------------

Rendering of read-only html widgets. Specify entire form or field by field.


input - tags
readOnlyStyleClass - attribute
-------------------------------

Enables developers to use a particular cascaded stylesheets (css) 'style' if input field is 
readOnly.

Exemple:

<db:dbform  ... readOnly="<%=readonly%>" ... > 
     <db:textField  fieldName="field1" styleClass="class1" readOnlyStyleClass="class1.readonly" />
</db:dbform>


javascriptArray  - tag
----------------------

This tag was added to allow the generation of a javascript array from EmbeddedData.

Exemple :

 <db:javascriptArray name="arrServerMod">
         <db:queryData  name="server_models_js"  
                                  query="SELECT id, cat_id, name FROM server_models"/>
 </db:javascriptArray>

Result : 


 <SCRIPT language="javascript">
     var arrServerMod = new Array();
     arrServerMod[0] = new Array('1','1','IBM 3090');
     arrServerMod[1] = new Array('2','1','IBM 4300');
     arrServerMod[2] = new Array('3','1','IBM 9121');
     arrServerMod[3] = new Array('4','1','Unisys A-Series');
     arrServerMod[4] = new Array('5','1','Unisys 2200-Series');
     arrServerMod[5] = new Array('6','2','IBM AS/400');
     arrServerMod[6] = new Array('7','2','Unisys 5000');
 </SCRIPT>


deleteButton  - tag
confirmMessage - attribute
--------------------------

This attribute will generate a javascript message asking if the user really wants to delete this 
entry.  If the 'captionResource' attribute of the (db)Form is set to true, the message can be 
resolve from a ResourceBundle (ref: I18N)

Exemple:

<db:deleteButton 
	caption="button.delete" 
	followUp="/bugs_list.jsp" 
	confirmMessage="bugsForm.delete.confirm" /> 


Note: Certain Netscape browsers will not support this feature when using an image-flavor delete 
button.


StaticDataItem  - tag
--------------------------

Added I18N compatibility for StaticDataItem tags. Now, value can be resolved via a given 
ResourceBundle.

  <db:staticData name="data_bugstate"> 
        <db:staticDataItem key="0" value=" bugsForm.status.0"/> 
        <db:staticDataItem key="1" value=" bugsForm.status.1"/> 
        <db:staticDataItem key="2" value=" bugsForm.status.2"/> 
  </db:staticData> 
  
  Here, bugsForm.status.x will be resolved according to user's current locale
  (locale found in request object). 
  
  

Checkbox, Radio - tags
growSize - attribute
----------------------

Allows a developer to limit the number of elements per row by generating <TABLE><TR><TD> 
html tags.

Exemple: 

<db:radio fieldName="bugstate" growSize="3"> 
     <db:staticData name="data_bugstate"> 
           <db:staticDataItem key="0" value="bugsForm.status.0"/> 
           <db:staticDataItem key="1" value="bugsForm.status.1"/> 
           <db:staticDataItem key="2" value="bugsForm.status.2"/> 
           <db:staticDataItem key="3" value="bugsForm.status.3"/> 
           <db:staticDataItem key="4" value="bugsForm.status.4"/> 
           <db:staticDataItem key="5" value="bugsForm.status.5"/> 
     </db:staticData> 
</db:radio>



isWebEvent - tag
----------------

Allows a developer to detect which type of event is being processed by the DbForms controller.  
The following events are currently available within dbForms:

	navFirst, 
	navPrev, 
	navNext, 
	navLast, 
	navNew, 
	noop, 
	goto, 
	insert, 
	update, 
	delete


Exemple:

 
  	<db:isWebEvent event="navfirst" value="true"> < /FONT> 
         <h4>navFirst event throwed</h4> 
  	</db:isWebEvent>


	You can even nest this tag within another tag...

  	<db:isWebEvent event="delete" value="false"> </FONT>  
         <h4>it's not a Delete event </h4> 
                <db:isWebEvent event="update" value="false"> </FONT>  
                     <h4>and not Update event</h4>  
                </db:isWebEvent> 
  	</db:isWebEvent>

  

label, dateLabel, dataLabel - tag
nullFieldValue - Attribute
---------------------------------

If the value (retrieved from the database) is null, allow the user to replace the text to display
by a custom value.  May be used in conjunction with dbForm's I18N support.

Example:

  	<db:label fieldName="name" nullFieldValue="msg.unknownUser"/>
 


Bug Fixes and general maintenance
---------------------------------

When generating a javascript validation method (javascriptValidation="true"), the method name 
is now generated in the proper case [first character uppercase].

Render onClick attribute only if javascript validation method exists.

Added logging (warning) of 'root' exceptions (i.e: 'Interceptor class not found' instead of 
'cannot connect'!)

Allow customEntry attribute (Select tag) to include dots(.) in its description value. 

Updated example applications 

__________________________________________________________________________________________________
__________________________________________________________________________________________________

Friday, April 19, 2002
DbForms version 1.1
Grunikiewicz.philip@hydro.qc.ca

New features
---------------------------------


Introduced support for Internationalization (i18n). (Contrib. E.Beaumier)

Incorporated Apache's Commons-Validator framework for server-side and client-side validations. (Contrib. E.Beaumier)

Upgraded struts digester to Commons digester. (Contrib. E.Beaumier)

Reworked Bugtracker application - incorporated i18n and Validation examples.

Reviewed dbForms User Guide v1.1

*** NOTE ***

Version 1.1 of DbForms has been upgraded to use the Apache commons framework.  
This framework required Java XML Parser (JAXP) v1.1.  Older Web containers 
(such as Tomcat v3.2.x) are still using JAXP v1.0 technology and are therefore 
incompatible.


